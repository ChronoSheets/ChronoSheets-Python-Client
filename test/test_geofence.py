# coding: utf-8

"""
    ChronoSheets API

    <div style='font-size: 14px!important;font-family: Open Sans,sans-serif!important;color: #3b4151!important;'><p>      ChronoSheets is a flexible timesheet solution for small to medium businesses, it is free for small teams of up to 3 and there are iOS and Android apps available.  Use the ChronoSheets API to create your own custom integrations.  Before starting, sign up for a ChronoSheets account at <a target='_BLANK' href='http://tsheets.xyz/signup'>http://tsheets.xyz/signup</a>.  </p></div><div id='cs-extra-info'></div>  # noqa: E501

    The version of the OpenAPI document: v1
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import ChronoSheetsAPI
from ChronoSheetsAPI.ChronoSheetsClientLibModel.geofence import Geofence  # noqa: E501
from ChronoSheetsAPI.rest import ApiException

class TestGeofence(unittest.TestCase):
    """Geofence unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test Geofence
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = ChronoSheetsAPI.models.geofence.Geofence()  # noqa: E501
        if include_optional :
            return Geofence(
                geo_fencing_id = 56, 
                org_id = 56, 
                created_by_user_id = 56, 
                last_updated_by_user_id = 56, 
                name = '0', 
                location_name = '0', 
                coordinates = [
                    ChronoSheetsAPI.models.basic_coordinate.BasicCoordinate(
                        latitude = 1.337, 
                        longitude = 1.337, )
                    ], 
                created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                trigger_job_code_id = 56, 
                trigger_task_id = 56, 
                trigger_settings = 'None', 
                alert_to_org_group_id = 56, 
                alert_settings = 'None', 
                start_time_hour = 56, 
                start_time_minute = 56, 
                end_time_hour = 56, 
                end_time_minute = 56
            )
        else :
            return Geofence(
        )

    def testGeofence(self):
        """Test Geofence"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
