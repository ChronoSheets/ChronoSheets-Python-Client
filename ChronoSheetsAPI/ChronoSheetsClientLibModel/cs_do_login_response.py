# coding: utf-8

"""
    The ChronoSheets API

    <div style='font-size: 14px!important;font-family: Open Sans,sans-serif!important;color: #3b4151!important;'><p>      ChronoSheets is a flexible timesheet solution for small to medium businesses, it is free for small teams of up to 5 and there are iOS and Android apps available.  Use the ChronoSheets API to create your own custom integrations.  </p>  <p>      First Steps:       <ol>          <li>Make sure you've <a href='/HomeV2/App/sign-up'>signed up to ChronoSheets</a> to get yourself a user account</li>          <li>Confirm your account by following the link sent to your email address.  This will activate your account</li>          <li>Use your username and password to obtain an Auth Token by using the DoLogin method inside the UserProfile section below.  Use the Auth Token as an argument to the other methods</li>          <li>Try different methods in the API Playground to learn about the API</li>          <li>If you're stuck, try the full getting started guide on the <a href='/Home/ApiDocs'>API Toolkit</a> page.</li>      </ol>  </p>  <p>      Further Steps:       <ul>          <li>Create a mobile app (iOS, Android or Windows) using one of the ChronoSheets Mobile SDKs</li>          <li>Create a custom integration with your app using one of the ChronoSheets API Client Libraries.</li>      </ul>      Read more about the API Toolkit on the <a href='/Home/ApiDocs'>API Toolkit</a> page.  </p></div>  # noqa: E501

    OpenAPI spec version: v1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six

from ChronoSheetsAPI.ChronoSheetsClientLibModel.cs_cs_client_side_user import CSClientSideUser  # noqa: F401,E501


class CSDoLoginResponse(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'cs_auth_token': 'str',
        'logged_in_user': 'CSClientSideUser'
    }

    attribute_map = {
        'cs_auth_token': 'CSAuthToken',
        'logged_in_user': 'LoggedInUser'
    }

    def __init__(self, cs_auth_token=None, logged_in_user=None):  # noqa: E501
        """CSDoLoginResponse - a model defined in Swagger"""  # noqa: E501

        self._cs_auth_token = None
        self._logged_in_user = None
        self.discriminator = None

        if cs_auth_token is not None:
            self.cs_auth_token = cs_auth_token
        if logged_in_user is not None:
            self.logged_in_user = logged_in_user

    @property
    def cs_auth_token(self):
        """Gets the cs_auth_token of this CSDoLoginResponse.  # noqa: E501

        The ChronoSheets Auth Token.  Use this token for all subsequent requests to the API.  The Auth Token does these things: holds your session and gives you appropraite authorisation to access API endpoints based on your UserRoles  # noqa: E501

        :return: The cs_auth_token of this CSDoLoginResponse.  # noqa: E501
        :rtype: str
        """
        return self._cs_auth_token

    @cs_auth_token.setter
    def cs_auth_token(self, cs_auth_token):
        """Sets the cs_auth_token of this CSDoLoginResponse.

        The ChronoSheets Auth Token.  Use this token for all subsequent requests to the API.  The Auth Token does these things: holds your session and gives you appropraite authorisation to access API endpoints based on your UserRoles  # noqa: E501

        :param cs_auth_token: The cs_auth_token of this CSDoLoginResponse.  # noqa: E501
        :type: str
        """

        self._cs_auth_token = cs_auth_token

    @property
    def logged_in_user(self):
        """Gets the logged_in_user of this CSDoLoginResponse.  # noqa: E501

        An object containg all your account information  # noqa: E501

        :return: The logged_in_user of this CSDoLoginResponse.  # noqa: E501
        :rtype: CSClientSideUser
        """
        return self._logged_in_user

    @logged_in_user.setter
    def logged_in_user(self, logged_in_user):
        """Sets the logged_in_user of this CSDoLoginResponse.

        An object containg all your account information  # noqa: E501

        :param logged_in_user: The logged_in_user of this CSDoLoginResponse.  # noqa: E501
        :type: CSClientSideUser
        """

        self._logged_in_user = logged_in_user

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, CSDoLoginResponse):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
